#include "mainwindow.h"
#include "ui_mainwindow.h"
#include <QtDebug>
#include <QTextCodec>
#include <QFile>
#include <QApplication>

/*
 * 1„ÄÅÂü∫Êú¨ÁöÑË°®ÊÉÖÔºåËøôÁ±ªË°®ÊÉÖÁöÑÂØπÂ∫îutf-8ÁºñÁ†ÅÂèàÂàÜ‰∏∫‰∏§ÁßçÔºå‰æãÂ¶Ç ÂìàÂìà Ëøô‰∏™Ë°®ÊÉÖÁöÑÁºñÁ†ÅÊòØ\ud83d\ude04 Âç†‰∫Ü‰∏§‰∏™Â≠óËäÇÈïøÂ∫¶ÔºåÂøÉ Ëøô‰∏™Ë°®ÊÉÖÁöÑÁºñÁ†Å‰∏∫\u2764 Âè™Âç†‰∫Ü‰∏Ä‰∏™Â≠óËäÇÈïøÂ∫¶ÔºåËøôÊòØÂõ†‰∏∫emojiÂú®Unicode‰∏≠ÁöÑÁºñÁ†ÅËåÉÂõ¥‰∏çÂêåÔºåÊúâ‰∏ÄÂÆöÁöÑËßÑÂæãÂèØÂæ™„ÄÇ

2„ÄÅÁªÑÂêàË°®ÊÉÖÔºåËøôÁ±ªË°®ÊÉÖÊòØÈÄöËøáËøûÊé•Á¨¶\u200dËøûÊé•ÔºåÂèØËÉΩÊòØÂ§ö‰∏™Âü∫Êú¨Ë°®ÊÉÖÁªÑÊàêÁöÑ‰∏Ä‰∏™Ôºå‰πüÂèØËÉΩÊòØ‰∏Ä‰∏™Ë°®ÊÉÖÂä†‰∏äÈ¢úËâ≤Á≠âÊ†∑ÂºèÔºåËøôÊ†∑Â∞±‰ºöÂá∫Áé∞Êé•Êî∂Âà∞ÂæàÈïø‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ÔºåÊúÄÂêéËß£ÊûêÂá∫Êù•Âè™Êúâ‰∏Ä‰∏™Ë°®ÊÉÖÁ¨¶Âè∑ÁöÑÊÉÖÂÜµ„ÄÇ

3„ÄÅÁâπÊÆäÁöÑÊï∞Â≠óË°®ÊÉÖÔºåÂ∏∏ËßÅÁöÑÂ∞±ÊòØ0-9Â∏¶‰∏Ä‰∏™Ê°ÜÁöÑÔºåËøôÁßçÁöÑÁºñÁ†ÅÂèàÊúâÊâÄ‰∏çÂêåÔºå‰æãÂ¶Ç 1 ÊòØ1\ufe0f\u20e3,2 ÊòØ 2\ufe0f\u20e3ÔºåËßÑÂæãÁõ∏ÂêåÔºåÈÉΩÊòØÊï∞Â≠óÂêéË∑ü\ufe0f\u20e3„ÄÇ

4„ÄÅ‰∏Ä‰∫õÊóóÂ∏úË°®ÊÉÖÔºåÂ§öÊï∞‰ª•\ud83cÂºÄÂßãÔºå‰ΩÜÊòØ\ud83cÂú®ÁªÑÂêàË°®ÊÉÖ‰∏≠ÂèàÁî®Êù•ËøûÊé•Ë°®ÊÉÖÁöÑÊ†∑ÂºèÁöÑÔºåÁî±‰∫éÊàëÁöÑÁ®ãÂ∫èÈúÄÊ±ÇÂè™ÈúÄË¶ÅÂ§ÑÁêÜ100Â§ö‰∏™Âü∫Êú¨Ë°®ÊÉÖÔºåÊ≤°ÊúâÊ∂âÂèäÂà∞ÊóóÂ≠êËøôÂùóÔºåÊâÄ‰ª•Ê≤°ÊúâÂ§ÑÁêÜÔºåÁõ¥Êé•Áî®Áº∫ÁúÅË°®ÊÉÖË°®Á§∫‰∫Ü
‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
ÁâàÊùÉÂ£∞ÊòéÔºöÊú¨Êñá‰∏∫CSDNÂçö‰∏ª„ÄåÂ∞èÊó†ÂøÉ„ÄçÁöÑÂéüÂàõÊñáÁ´†ÔºåÈÅµÂæ™ CC 4.0 BY-SA ÁâàÊùÉÂçèËÆÆÔºåËΩ¨ËΩΩËØ∑ÈôÑ‰∏äÂéüÊñáÂá∫Â§ÑÈìæÊé•ÂèäÊú¨Â£∞Êòé„ÄÇ
ÂéüÊñáÈìæÊé•Ôºöhttps://blog.csdn.net/muwuxin/article/details/88896188
*/
///
/// \brief isEmoji
/// \param value
/// \param count
/// \return
///
bool isEmoji(int value, int & count)
{
    //0x200d -- ËøûÊé•Á¨¶
    //0xd83c----Â•ΩÂÉèÊòØÈ¢úËâ≤ÂàÜÂâ≤Á¨¶ ÊàñËÄÖÊòØÊóóÂ∏ú?
    //0xfe0f ---Â•ΩÂÉèÊòØË°®ÊÉÖÁªìÊùüÁ¨¶
    //0xfe0f0x20e3--ÁâπÊÆäÁ¨¶Âè∑ÁöÑË°®ÊÉÖ
    if ((value >= 0xd800 && value <= 0xdbff))
    {
        count = 2;
        return true;
    }
    else if ((0x2100 <= value && value <= 0x27ff && value != 0x263b)
             || (0x2b05 <= value && value <= 0x2b07)
             || (0x2934 <= value && value <= 0x2935)
             || (0x3297 <= value && value <= 0x3299)
             || value == 0xa9 || value == 0xae || value == 0x303d || value == 0x3030
             || value == 0x2b55 || value == 0x2b1c || value == 0x2b1b || value == 0x2b50
             || value == 0x231a)
    {
        count = 1;
        return true;
    }
    return false;
}




bool isContainEmoji(const QString  & strUtf8)
{
    bool bContain = false;
    std::u16string ut16 = strUtf8.toStdU16String();

    if (ut16.empty())
    {
        return false;
    }

    size_t len = ut16.length();
    for (size_t i = 0; i < len; ++i)
    {
        char16_t hs = ut16[i];
        if (0xd800 <= hs && hs <= 0xdbff)
        {
            if (ut16.length() > (i + 1))
            {
                char16_t ls = ut16[i + 1];
                int uc = ((hs - 0xd800) * 0x400) + (ls - 0xdc00) + 0x10000;
                if (0x1d000 <= uc && uc <= 0x1f77f)
                {
                    bContain = true;
                    break;
                }
            }
        }
        else
        {
            if (0x2100 <= hs && hs <= 0x27ff)
            {
                bContain = true;
            }
            else if (0x2B05 <= hs && hs <= 0x2b07)
            {
                bContain = true;
            }
            else if (0x2934 <= hs && hs <= 0x2935)
            {
                bContain = true;
            }
            else if (0x3297 <= hs && hs <= 0x3299)
            {
                bContain = true;
            }
            else if (hs == 0xa9 || hs == 0xae || hs == 0x303d || hs == 0x3030 || hs == 0x2b55 || hs == 0x2b1c || hs == 0x2b1b || hs == 0x2b50)
            {
                bContain = true;
            }
            else if (hs >= 0x2600 && hs <= 0x27BF) // ÊùÇÈ°πÁ¨¶Âè∑‰∏éÁ¨¶Âè∑Â≠ó‰Ωì
            {
                bContain = true;
            }
            else if (hs == 0x303D || hs == 0x2049 || hs == 0x203C || hs == 0x205F)
            {
                bContain = true;
            }
            else if (hs >= 0x2000 && hs <= 0x200F)//
            {
                bContain = true;
            }
            else if (hs >= 0x2028 && hs <= 0x202F)//
            {
                bContain = true;
            }
            else if (hs >= 0x2065 && hs <= 0x206F)
            {
                bContain = true;
            }
            /* Ê†áÁÇπÁ¨¶Âè∑Âç†Áî®Âå∫Âüü */
            else if (hs >= 0x2100 && hs <= 0x214F)// Â≠óÊØçÁ¨¶Âè∑
            {
                bContain = true;
            }
            else if (hs >= 0x2300 && hs <= 0x23FF)// ÂêÑÁßçÊäÄÊúØÁ¨¶Âè∑
            {
                bContain = true;
            }
            else if (hs >= 0x2B00 && hs <= 0x2BFF)// ÁÆ≠Â§¥A
            {
                bContain = true;
            }
            else if (hs >= 0x2900 && hs <= 0x297F)// ÁÆ≠Â§¥B
            {
                bContain = true;
            }
            else if (hs >= 0x3200 && hs <= 0x32FF)// ‰∏≠ÊñáÁ¨¶Âè∑
            {
                bContain = true;
            }
            else if (hs >= 0xD800 && hs <= 0xDFFF)// È´ò‰Ωé‰ΩçÊõø‰ª£Á¨¶‰øùÁïôÂå∫Âüü
            {
                bContain = true;
            }
            else if (hs >= 0xE000 && hs <= 0xF8FF)// ÁßÅÊúâ‰øùÁïôÂå∫Âüü
            {
                bContain = true;
            }
            else if (hs >= 0xFE00 && hs <= 0xFE0F)// ÂèòÂºÇÈÄâÊã©Âô®
            {
                bContain = true;
            }
            else if (hs >= 0x10000)
            {
                bContain = true;
            }

        }
    }

    return bContain;
}



MainWindow::MainWindow(QWidget* parent) :
    QMainWindow(parent),
    ui(new Ui::MainWindow)
{
    ui->setupUi(this);

    QTextCodec *gbk = QTextCodec::codecForName("gb18030");
    QTextCodec *utf8 = QTextCodec::codecForName("utf-8");

    QString str = "üëó"; // Â§±Ë¥•ÔºåÈªòËÆ§gbk, ‰ΩÜgbkÂ≠òÂÇ®‰∏ç‰∫ÜÁªòÊñáÂ≠ó
    QString strUnicode = gbk->toUnicode(str.toLocal8Bit());
    qDebug() << strUnicode.toUtf8();

    QString str2 = QString::fromUtf8("üëó");
    QString strUnicode2 = utf8->toUnicode(str2.toUtf8());
    qDebug() << strUnicode2.toUtf8();

    QString strEmoji = ui->lineEdit->text(); // Ê≠§Ê¨°Ëé∑ÂæóÁöÑtext‰∏∫utf-8
    qDebug() << strEmoji.toUtf8();
    QString strEmojiUnicode = utf8->toUnicode(strEmoji.toUtf8());
    qDebug() << strEmojiUnicode.toUtf8();

    QString chinese = "Ê±â"; //ÈªòËÆ§gbk, Â≠òÂÇ®Ê±âÂ≠óÊàêÂäü
    qDebug() << chinese.toLocal8Bit();

    // test
    QByteArray bytesChinese;
    bytesChinese.append(0xBA);
    bytesChinese.append(0xBA);
    QString str222 = QString::fromLocal8Bit(bytesChinese); // Ëµã‰∫àÂ≠óËäÇÊï∞ÁªÑ‰∏∫‰∏Ä‰∏™gbkÂ≠óÁ¨¶ÁöÑÊÑè‰πâ
    qDebug() << str222;

    // test2
    QByteArray bytesEmoji;
    bytesEmoji.append(0xF0);
    bytesEmoji.append(0x9D);
    bytesEmoji.append(0x8C);
    bytesEmoji.append(0x86);
    qDebug() << bytesEmoji;
    QString strEmojiUnicode3333 = utf8->toUnicode(bytesEmoji);// Ëµã‰∫àÂ≠óËäÇÊï∞ÁªÑ‰∏∫‰∏Ä‰∏™utf-8Â≠óÁ¨¶ÁöÑÊÑè‰πâ
    qDebug() << strEmojiUnicode3333.toUtf8();
    ui->label_2->setText(strEmojiUnicode3333);

    // test3 ‰ªéunicodeÊñáÊú¨‰∏≠ËØªÂèñ
    QFile file(QCoreApplication::applicationDirPath() + "/" + "Emoji.txt");
    if (!file.open(QIODevice::ReadOnly))
    {
        return;
    }
    QByteArray bytesAll = file.readAll();
    qDebug() << bytesAll;
    QString strEmojiUnicode4444 = utf8->toUnicode(bytesAll);
    qDebug() << strEmojiUnicode4444; // ÊâìÂç∞Ë∞ÉÁî®ÁöÑÊòØansiÊåáÂÆöÊú¨Á≥ªÁªüÈªòËÆ§ÁöÑÂ≠óÁ¨¶ÈõÜgb2312ÔºåÊâÄ‰ª•ÊâìÂç∞‰∏çÂá∫Âïä
    ui->label->setText(strEmojiUnicode4444);

    qDebug() << isContainEmoji(QString::fromUtf8("Ê±âÂ≠ó"));    // false -ok
    qDebug() << isContainEmoji(QString(bytesAll));  // true -ok

}

MainWindow::~MainWindow()
{
    delete ui;
}
